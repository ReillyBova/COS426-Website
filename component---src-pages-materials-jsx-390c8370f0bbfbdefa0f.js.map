{"version":3,"sources":["webpack:///./src/content/Materials/materials.js","webpack:///./src/pages/materials.jsx"],"names":["materials","lectures","precepts","readings","text","link","selection","other","title","due","week","day","pageQuery","Materials","data","site","assignments","siteMetadata","courseSettings","firstLecture","secondLecture","assignmentList","edges","map","node","frontmatter","fields","weekToAssignments","forEach","assignment","weekIndex","dueWeek","push","weekToEvents","otherEvent","masterSchedule","weekSchedule","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","firstLectureData","firstReadingsData","secondLectureData","secondReadingsData","lecture","date","semesterOffsetToDateString","dueDay","preceptData","precept","simplifiedSchedule","Typography","variant","gutterBottom","schedule"],"mappings":"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","file":"component---src-pages-materials-jsx-390c8370f0bbfbdefa0f.js","sourcesContent":["const materials = {\n    lectures: [\n        'Introduction & Color',\n        'Digital Image Processing', // Week 1\n        'Sampling, Resampling & Warping',\n        'Compositing & Morphing', // Week 2\n        '3D Modeling',\n        'Polygonal Meshes', // Week 3\n        'Parametric Curves & Surfaces',\n        'Subdivision Surfaces', // Week 4\n        'Implicit Surfaces & Solid Models',\n        'Scenes & Transformations', // Week 5\n        'More On Transformations',\n        '', // Week 6\n        'Rendering & Raycasting',\n        'Lighting & Reflectance', // Week 7\n        'Global Illumination',\n        '3D Rasterization Pipeline', // Week 8\n        'Scan Conversion',\n        'Non-photorealistic Rendering', // Week 9\n        'Passive Dynamics & Particle Systems',\n        'Character Animation', // Week 10\n        'Production F/X',\n        '3D Fabrication', // Week 11\n        'Virtual & Augmented Reality (Doug Lanman, Facebook Reality Labs)',\n        '', // Week 12\n    ],\n    precepts: [\n        'Learning Javascript', // Week 1\n        'Image Processing I', // Week 2\n        'Image Processing II', // Week 3\n        'Halfedge Structure', // Week 4\n        'Mesh Processing', // Week 5\n        'Open Office Hours (Wed only; no Thu precept)', // Week 6\n        'GLSL & Raytracing I', // Week 7\n        'Raytracing II', // Week 8\n        'Rasterization', // Week 9\n        'Simulation & Animation', // Week 10\n        'Web Graphics', // Week 11\n        'Final Project Starter Code', // Week 12\n    ],\n    readings: [\n        [{ text: 'Ch. 1, 2, & 19' }],\n        [\n            { link: 'Smith95b' },\n            { selection: 'Sections 1–2 of', link: 'Paris09' },\n        ], // Week 1\n        [{ text: 'Ch. 6.15' }, { link: 'Hanrahan95' }],\n        [{ text: 'Ch. 5.3' }, { link: 'Beier92' }], // Week 2\n        [{ text: 'Ch. 13' }],\n        [{ selection: 'Sections 1–3 of', link: 'Botsch07' }], // Week 3\n        [{ text: 'Ch. 14' }],\n        [{ selection: 'Sections 1, 2.1, 4, & 5 of', link: 'Zorin00' }], // Week 4\n        [{ text: 'Ch. 15' }],\n        [{ text: 'Ch. A.1, A.2, A.5, 7, 9, & 11' }], // Week 5\n        [{ text: 'Ch. 8 & 10' }],\n        [], // Week 6\n        [{ text: 'Ch. 16 & 21.1' }],\n        [{ text: 'Ch. 17–18' }], // Week 7\n        [{ text: 'Ch. 21' }],\n        [{ text: 'Ch. 6' }], // Week 8\n        [],\n        [], // Week 9\n        [{ link: 'Reeves83' }, { link: 'Witkin01a' }, { link: 'Witkin01b' }],\n        [], // Week 10\n        [],\n        [], // Week 11\n        [],\n        [], // Week 12\n    ],\n    other: [\n        {\n            title: 'Exam POSTPONED due to COVID-19',\n            due: { week: 6, day: 'Thursday' },\n        },\n        {\n            title: 'Virtual Midterm Exam (see Piazza)',\n            due: { week: 7, day: 'Friday' },\n        },\n        {\n            title: 'Project Proposals over Zoom',\n            due: { week: 12, day: 'Thursday' },\n        },\n        {\n            title: 'Final Project Presentations over Zoom (Scheduling and Logistics TBD)',\n            due: { week: 13, day: 'Thursday' },\n        },\n    ],\n};\n\nexport default materials;\n","// Library imports\nimport React from 'react';\nimport { graphql } from 'gatsby';\n// Project imports\nimport { PageLayout, Content, MaterialsTable } from 'components';\nimport { materials } from 'content';\nimport { semesterOffsetToDateString } from 'utils';\n// UI imports\nimport Typography from '@material-ui/core/Typography';\n\nfunction Materials({ data }) {\n    // Grab semester and first day of semester\n    const { site, assignments } = data;\n    const { firstLecture, secondLecture } = site.siteMetadata.courseSettings;\n\n    // Extract assignment query into array\n    const assignmentList = assignments.edges.map(({ node }) => ({\n        ...node.frontmatter,\n        ...node.fields,\n    }));\n\n    // Organize assignments and events by week\n    const weekToAssignments = {};\n    assignmentList.forEach((assignment) => {\n        const weekIndex = assignment.dueWeek - 1;\n        if (!weekToAssignments[weekIndex]) {\n            weekToAssignments[weekIndex] = [];\n        }\n\n        weekToAssignments[weekIndex].push(assignment);\n    });\n    const weekToEvents = {};\n    materials.other.forEach((otherEvent) => {\n        const { week } = otherEvent.due;\n        const weekIndex = week - 1;\n        if (!weekToEvents[weekIndex]) {\n            weekToEvents[weekIndex] = [];\n        }\n\n        weekToEvents[weekIndex].push(otherEvent);\n    });\n\n    // Build semester schedule week by week\n    const masterSchedule = [];\n    for (let week = 0; week < 13; week++) {\n        // Initialize empty schedule for the week\n        const weekSchedule = {\n            Monday: [],\n            Tuesday: [],\n            Wednesday: [],\n            Thursday: [],\n            Friday: [],\n            Saturday: [],\n            Sunday: [],\n        };\n\n        // Lectures take first priority in ordering\n        if (week < 12) {\n            // Extract data\n            const firstLectureData = materials.lectures[2 * week];\n            const firstReadingsData = materials.readings[2 * week];\n            const secondLectureData = materials.lectures[2 * week + 1];\n            const secondReadingsData = materials.readings[2 * week + 1];\n\n            // Add data to schedule\n            if (firstLectureData) {\n                weekSchedule[firstLecture].push({\n                    lecture: firstLectureData,\n                    readings: firstReadingsData,\n                    date: semesterOffsetToDateString(week, firstLecture),\n                });\n            }\n            if (secondLectureData) {\n                weekSchedule[secondLecture].push({\n                    lecture: secondLectureData,\n                    readings: secondReadingsData,\n                    date: semesterOffsetToDateString(week, secondLecture),\n                });\n            }\n        }\n\n        // Assignments have second priority\n        if (weekToAssignments[week]) {\n            weekToAssignments[week].forEach((assignment) => {\n                const day = assignment.dueDay;\n                const date = semesterOffsetToDateString(\n                    week,\n                    assignment.dueDay\n                );\n                weekSchedule[day].push({ assignment: assignment, date });\n            });\n        }\n\n        // Precepts have third priority\n        if (week < 12) {\n            const preceptData = materials.precepts[week];\n            if (preceptData) {\n                // Precept appears after last lecture for week\n                weekSchedule[secondLecture].push({\n                    precept: preceptData,\n                    date: `Precept`,\n                });\n            }\n        }\n        masterSchedule.push(weekSchedule);\n\n        // Events have last priority\n        if (weekToEvents[week]) {\n            weekToEvents[week].forEach((otherEvent) => {\n                const day = otherEvent.due.day;\n                const date = semesterOffsetToDateString(week, day);\n                weekSchedule[day].push({ otherEvent: otherEvent, date });\n            });\n        }\n    }\n\n    // Condense schedule into array of arrays of objects\n    const simplifiedSchedule = masterSchedule.map((week) => {\n        const simplifiedWeek = [\n            ...week.Monday,\n            ...week.Tuesday,\n            ...week.Wednesday,\n            ...week.Thursday,\n            ...week.Friday,\n            ...week.Saturday,\n            ...week.Sunday,\n        ];\n\n        return simplifiedWeek;\n    });\n\n    // Render\n    return (\n        <PageLayout title={'Materials'}>\n            <Content>\n                <Typography variant='h3' gutterBottom>\n                    {'Materials'}\n                </Typography>\n                <MaterialsTable schedule={simplifiedSchedule} />\n            </Content>\n        </PageLayout>\n    );\n}\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                courseSettings {\n                    firstLecture\n                    secondLecture\n                }\n            }\n        }\n        assignments: allMarkdownRemark(\n            filter: {\n                fileAbsolutePath: {regex: \"/\\\\/src\\\\/content\\\\/Assignments\\\\/.*\\\\.md$/\"}\n            }\n        ) {\n            edges {\n                node {\n                    frontmatter {\n                        calendarName\n                        dueWeek\n                        dueDay\n                        dueTime\n                        available\n                        visible\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default Materials;\n"],"sourceRoot":""}