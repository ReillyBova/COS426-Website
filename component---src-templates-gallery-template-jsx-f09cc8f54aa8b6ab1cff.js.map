{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","webpack:///./node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","webpack:///./node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","webpack:///./src/templates/GalleryTemplate.jsx"],"names":["createSvgIcon","d","withStyles","theme","root","display","marginLeft","spacing","marginRight","backgroundColor","palette","grey","color","borderRadius","cursor","boxShadow","shadows","icon","width","height","name","props","classes","other","ButtonBase","component","className","focusRipple","MoreHoriz","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","Typography","ol","items","reduce","acc","current","length","push","insertSeparators","slice","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect","galleryStyles","makeStyles","textOverflow","overflowWrap","prizes","injectPrizeIcon","text","split","place","parseInt","splice","join","pageQuery","GalleryTemplate","data","gallery","frontmatter","id","shortTitle","longTitle","customComponents","td","variant","img","h3","urlify","hasAward","galleries","excludeID","newHeadings","headings","heading","value","depth","injectProjectHeaders","projects","flat","title","subtitle","aria-label","to","markdown","components"],"mappings":"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","file":"component---src-templates-gallery-template-jsx-f09cc8f54aa8b6ab1cff.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.reduce\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: you have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","// Library imports\nimport React from 'react';\nimport { graphql } from 'gatsby';\n// Project imports\nimport {\n    AnchorLink,\n    PageLayout,\n    ProjectGallery,\n    HoverImage,\n    MarkdownPage,\n    GalleryCards,\n    InternalLink,\n} from 'components';\nimport { urlify, injectProjectHeaders } from 'utils';\n// UI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\nconst galleryStyles = makeStyles(() => ({\n    textOverflow: {\n        overflowWrap: 'break-word',\n    },\n}));\n\n// Emoji prizes\nconst prizes = ['🥇', '🥈', '🥉', '🌟', '⭐', '✨'];\n\nconst injectPrizeIcon = (text) => {\n    const items = text.split(',');\n    if (items.length > 1) {\n        const place = parseInt(items.splice(0, 1));\n        if (place >= 1 && place <= 6) {\n            const icon = prizes[place - 1];\n            const name = items.join('');\n            return `${icon} ${name}`;\n        }\n    }\n\n    return text;\n};\n\n// Generate gallery from markdown content\nfunction GalleryTemplate({ data }) {\n    // Custom class\n    const { textOverflow } = galleryStyles();\n\n    // Extract Frontmatter\n    const { id, shortTitle, longTitle } = data.gallery.frontmatter;\n\n    // Custom components to generate from markdown html\n    const customComponents = {\n        td: ({ children, ...props }) => (\n            <Typography\n                variant='subtitle1'\n                component='td'\n                color='textSecondary'\n                className={textOverflow}\n                {...props}\n            >\n                {children}\n            </Typography>\n        ),\n        img: (props) => <HoverImage {...props} />,\n        h3: ({ children }) => {\n            const text = injectPrizeIcon(children[0]);\n\n            // Corner case (should not shot HTML)\n            if (\n                text === 'project-winners-headers' ||\n                text === 'project-mentions-headers'\n            ) {\n                return null;\n            }\n\n            return (\n                <Typography variant='h6'>\n                    <AnchorLink id={urlify(text)}>{text}</AnchorLink>\n                </Typography>\n            );\n        },\n\n        ['project-winners']: () => <ProjectGallery hasAward />,\n        ['project-mentions']: () => <ProjectGallery />,\n        galleries: () => <GalleryCards excludeID={id} />,\n    };\n\n    const { headings } = data.gallery;\n    const newHeadings = headings\n        .map((heading) => {\n            // Inject prize icon\n            const { value, depth } = heading;\n            if (depth > 1) {\n                heading.value = injectPrizeIcon(value);\n            }\n\n            // Inject project headings\n            if (value === 'project-winners-headers') {\n                return injectProjectHeaders(data.projects, true, depth);\n            } else if (value === 'project-mentions-headers') {\n                return injectProjectHeaders(data.projects, false, depth);\n            }\n\n            return heading;\n        })\n        .flat();\n\n    // Render\n    return (\n        <PageLayout title={`${shortTitle} Gallery`}>\n            <MarkdownPage\n                title={`${longTitle} Art Contest Selection`}\n                subtitle={\n                    <Breadcrumbs aria-label='breadcrumb'>\n                        <InternalLink color='inherit' to='/gallery'>\n                            {'Gallery'}\n                        </InternalLink>\n                        <Typography>{longTitle}</Typography>\n                    </Breadcrumbs>\n                }\n                markdown={{ ...data.gallery, headings: newHeadings }}\n                components={customComponents}\n            ></MarkdownPage>\n        </PageLayout>\n    );\n}\n\n// Query markdown content\nexport const pageQuery = graphql`\n    query($slug: String!) {\n        gallery: markdownRemark(fields: { slug: { eq: $slug } }) {\n            htmlAst\n            headings {\n                value\n                depth\n            }\n            frontmatter {\n                id\n                shortTitle\n                longTitle\n            }\n        }\n        projects: allMarkdownRemark(\n            filter: {\n                fileAbsolutePath: {regex: \"/\\\\/src\\\\/content\\\\/Gallery\\\\/Galleries\\\\/projects/.*\\\\.md$/\"}\n            }\n        ) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        visibilityRank\n                        instructorAwards\n                        instructorMentions\n                        studentAwards\n                        studentMentions\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default GalleryTemplate;\n"],"sourceRoot":""}