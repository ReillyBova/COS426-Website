{"version":3,"sources":["webpack:///./src/assets/gifs/assignments/final_project.gif","webpack:///./src/assets/gifs/projects/dream_world.gif","webpack:///./src/pages/assignments.jsx","webpack:///./src/assets/gifs/assignments/assignment_1.gif","webpack:///./src/assets/gifs/projects/cat_dash.gif","webpack:///./src/assets/gifs/projects/drivers_ed.gif","webpack:///./src/assets/gifs/assignments/assignment_5.gif"],"names":["module","exports","pageQuery","Assignments","data","assignmentData","assignments","edges","sort","a","b","weekA","node","frontmatter","dueWeek","weekB","dueDay","imageMap","featuredImages","nodes","forEach","name","childImageSharp","fluid","gifMap","Object","entries","AssignmentGIFs","gif","title","variant","gutterBottom","container","spacing","map","fields","imageName","dueTime","slug","fluidImage","gifImage","date","semesterOffsetToDateString","key","item","md","sm","xs","dueDate"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,6D,qBCA3CD,EAAOC,QAAU,IAA0B,2D,iwBCoFpC,IAAMC,EAAS,WA+CPC,UAxHf,YAAgC,IAATC,EAAQ,EAARA,KAEbC,EAAiBD,EAAKE,YAAYC,MACxCF,EAAeG,MAAK,SAACC,EAAGC,GACpB,IAAMC,EAAQF,EAAEG,KAAKC,YAAYC,QAC3BC,EAAQL,EAAEE,KAAKC,YAAYC,QAGjC,OAAIH,IAAUI,EAEHN,EAAEG,KAAKC,YAAYG,OAASN,EAAEE,KAAKC,YAAYG,OAGnDL,EAAQI,KAInB,IAAME,EAAW,GACjBb,EAAKc,eAAeC,MAAMC,SAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBACvCL,EAASI,GAAQC,EAAgBC,SAGrC,IAAMC,EAAS,GAMf,OALAC,OAAOC,QAAQC,KAAgBP,SAAQ,YAAkB,IAAhBC,EAAe,KAATO,EAAS,KACpDJ,EAAOH,GAAQO,KAKf,kBAAC,IAAD,CAAYC,MAAO,eACf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,GAChC,eAEL,kBAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,GACpB5B,EAAe6B,KAAI,YAAe,IAAZtB,EAAW,EAAXA,KACXC,EAAwBD,EAAxBC,YAAasB,EAAWvB,EAAXuB,OAEjBC,EAIAvB,EAJAuB,UACAtB,EAGAD,EAHAC,QACAE,EAEAH,EAFAG,OACAqB,EACAxB,EADAwB,QAEIC,EAASH,EAATG,KAGFC,EAAatB,EAASmB,GACtBI,EAAWhB,EAAOY,GAGlBK,EAAOC,YACT5B,EAAU,EACVE,GAGJ,OACI,kBAAC,IAAD,CAAM2B,IAAKL,EAAMM,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACpC,kBAAC,IAAD,CACIT,KAAMA,EACNzB,YAAaA,EACb0B,WAAYA,EACZC,SAAUA,EACVQ,QAAYP,EAAL,OAAgBJ,a,uBCzE3DrC,EAAOC,QAAU,IAA0B,4D,qBCA3CD,EAAOC,QAAU,IAA0B,wD,qBCA3CD,EAAOC,QAAU,IAA0B,0D,qBCA3CD,EAAOC,QAAU,IAA0B","file":"component---src-pages-assignments-jsx-ad7c3da4baa67d01ce86.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/final_project-7ec0b017ec4644a210ca56a186800420.gif\";","module.exports = __webpack_public_path__ + \"static/dream_world-426c3f3d9492f14805a2de9b3f55f3aa.gif\";","// Library imports\nimport React from 'react';\nimport { graphql } from 'gatsby';\n// Project imports\nimport { AssignmentCard, PageLayout, Content } from 'components';\nimport { semesterOffsetToDateString } from 'utils';\nimport { AssignmentGIFs } from 'gifs';\n// UI imports\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Assignments({ data }) {\n    // Extract data from query and sort by assignment number\n    const assignmentData = data.assignments.edges;\n    assignmentData.sort((a, b) => {\n        const weekA = a.node.frontmatter.dueWeek;\n        const weekB = b.node.frontmatter.dueWeek;\n\n        // Corner case for same week\n        if (weekA === weekB) {\n            // Order by day\n            return a.node.frontmatter.dueDay - b.node.frontmatter.dueDay;\n        }\n        // Otherwise, order by week\n        return weekA - weekB;\n    });\n\n    // Map images and gifs by name\n    const imageMap = {};\n    data.featuredImages.nodes.forEach(({ name, childImageSharp }) => {\n        imageMap[name] = childImageSharp.fluid;\n    });\n\n    const gifMap = {};\n    Object.entries(AssignmentGIFs).forEach(([name, gif]) => {\n        gifMap[name] = gif;\n    });\n\n    // Render\n    return (\n        <PageLayout title={'Assignments'}>\n            <Content>\n                <Typography variant='h3' gutterBottom>\n                    {'Assignments'}\n                </Typography>\n                <Grid container spacing={3}>\n                    {assignmentData.map(({ node }) => {\n                        const { frontmatter, fields } = node;\n                        const {\n                            imageName,\n                            dueWeek,\n                            dueDay,\n                            dueTime,\n                        } = frontmatter;\n                        const { slug } = fields;\n\n                        // Source image if possible\n                        const fluidImage = imageMap[imageName];\n                        const gifImage = gifMap[imageName];\n\n                        // Compute due date string\n                        const date = semesterOffsetToDateString(\n                            dueWeek - 1,\n                            dueDay\n                        );\n\n                        return (\n                            <Grid key={slug} item md={4} sm={6} xs={12}>\n                                <AssignmentCard\n                                    slug={slug}\n                                    frontmatter={frontmatter}\n                                    fluidImage={fluidImage}\n                                    gifImage={gifImage}\n                                    dueDate={`${date} at ${dueTime}`}\n                                />\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n            </Content>\n        </PageLayout>\n    );\n}\n\nexport const pageQuery = graphql`\n    query {\n        assignments: allMarkdownRemark(\n            filter: {\n                fileAbsolutePath: {regex: \"/\\\\/src\\\\/content\\\\/Assignments\\\\/.*\\\\.md$/\"},\n                frontmatter: { visible: { eq: true } }\n            }\n        ) {\n            edges {\n                node {\n                    frontmatter {\n                        assignmentName\n                        assignmentNumber\n                        dueWeek\n                        dueDay\n                        dueTime\n                        imageName\n                        submitURL\n                        galleryID\n                        feedbackURL\n                        available\n                        description\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n        featuredImages: allFile(\n            filter: {\n                sourceInstanceName: { eq: \"images\" }\n                relativeDirectory: { eq: \"assignments\" }\n            }\n        ) {\n            nodes {\n                name\n                childImageSharp {\n                    fluid(maxWidth: 500, quality: 100) {\n                        ...GatsbyImageSharpFluid_withWebp\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default Assignments;\n","module.exports = __webpack_public_path__ + \"static/assignment_1-ea0b552d1f6083fe1a6a449ad234aed9.gif\";","module.exports = __webpack_public_path__ + \"static/cat_dash-e1d1f083ad824378c82a563875262420.gif\";","module.exports = __webpack_public_path__ + \"static/drivers_ed-1591849e1c21ae9c46d12a236b29d63c.gif\";","module.exports = __webpack_public_path__ + \"static/assignment_5-ff93435bae4e25669b3a6370dad5ffa9.gif\";"],"sourceRoot":""}