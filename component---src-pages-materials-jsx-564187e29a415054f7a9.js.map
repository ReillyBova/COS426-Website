{"version":3,"sources":["webpack:///./src/content/Materials/materials.js","webpack:///./src/pages/materials.jsx"],"names":["materials","lectures","precepts","readings","text","link","selection","assignments","title","due","week","day","time","other","Materials","site","siteMetadata","courseSettings","semester","firstDayOfSemester","firstLecture","secondLecture","firstDay","Date","computeAndFormatDate","weekNumber","dayOfWeek","dayToNumber","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","dateFormatOptions","timeZone","weekday","month","formatDate","date","toLocaleDateString","undefined","result","console","warn","adjustedWeekNumber","setUTCDate","getUTCDate","weekToAssignments","forEach","assignment","weekIndex","push","weekToEvents","otherEvent","masterSchedule","weekSchedule","firstLectureData","firstReadingsData","secondLectureData","secondReadingsData","lecture","preceptData","precept","simplifiedSchedule","map","Typography","variant","gutterBottom","schedule"],"mappings":"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","file":"component---src-pages-materials-jsx-564187e29a415054f7a9.js","sourcesContent":["const materials = {\n    lectures: [\n        'Introduction & Color',\n        'Digital Image Processing', // Week 1\n        'Sampling, Resampling & Warping',\n        'Compositing & Morphing', // Week 2\n        '3D Modeling',\n        'Polygonal Meshes', // Week 3\n        'Parametric Curves & Surfaces',\n        'Subdivision Surfaces', // Week 4\n        'Implicit Surfaces & Solid Models',\n        'Scenes & Transformations', // Week 5\n        'More On Transformations',\n        '', // Week 6\n        'Rendering & Raycasting',\n        'Lighting & Reflectance', // Week 7\n        'Global Illumination',\n        '3D Rasterization Pipeline', // Week 8\n        'Scan Conversion',\n        'Non-photorealistic Rendering', // Week 9\n        'Passive Dynamics & Particle Systems',\n        'Character Animation', // Week 10\n        'Games',\n        'Production F/X', // Week 11\n        '3D Fabrication',\n        '', // Week 12\n    ],\n    precepts: [\n        'Learning Javascript', // Week 1\n        'Image Processing I', // Week 2\n        'Image Processing II', // Week 3\n        'Halfedge Structure', // Week 4\n        'Mesh Processing', // Week 5\n        'Open Office Hours (Wed only; no Thu precept)', // Week 6\n        'GLSL & Raytracing I', // Week 7\n        'Raytracing II', // Week 8\n        'Rasterization I', // Week 9\n        'Rasterization II', // Week 10\n        'Animation', // Week 11\n        'Open Office Hours (Wed only; no Thu precept)', // Week 12\n    ],\n    readings: [\n        [{ text: 'Ch. 1, 2, & 19' }],\n        [\n            { link: 'Smith95b' },\n            { selection: 'Sections 1–2 of', link: 'Paris09' },\n        ], // Week 1\n        [{ text: 'Ch. 6.15' }, { link: 'Hanrahan95' }],\n        [{ text: 'Ch. 5.3' }, { link: 'Beier92' }], // Week 2\n        [{ text: 'Ch. 13' }],\n        [{ selection: 'Sections 1–3 of', link: 'Botsch07' }], // Week 3\n        [{ text: 'Ch. 14' }],\n        [{ selection: 'Sections 1, 2.1, 4, & 5 of', link: 'Zorin00' }], // Week 4\n        [{ text: 'Ch. 15' }],\n        [{ text: 'Ch. A.1, A.2, A.5, 7, 9, & 11' }], // Week 5\n        [{ text: 'Ch. 8 & 10' }],\n        [], // Week 6\n        [{ text: 'Ch. 16 & 21.1' }],\n        [{ text: 'Ch. 17–18' }], // Week 7\n        [{ text: 'Ch. 21' }],\n        [{ text: 'Ch. 6' }], // Week 8\n        [],\n        [], // Week 9\n        [{ link: 'Reeves83' }, { link: 'Witkin01a' }, { link: 'Witkin01b' }],\n        [], // Week 10\n        [],\n        [], // Week 11\n        [],\n        [], // Week 12\n    ],\n    assignments: [\n        {\n            title: 'Assignment 0 (JS Paint)',\n            due: { week: 2, day: 'Tuesday', time: '11:55pm' },\n        },\n        {\n            title: 'Assignment 1 (Photo Editor)',\n            due: { week: 3, day: 'Sunday', time: '11:55pm' },\n        },\n        {\n            title: 'Assignment 2 (Mesh Editor)',\n            due: { week: 5, day: 'Sunday', time: '11:55pm' },\n        },\n        {\n            title: 'Assignment 3 (Raytracer)',\n            due: { week: 8, day: 'Sunday', time: '11:55pm' },\n        },\n        {\n            title: 'Assignment 4 (Rasterizer)',\n            due: { week: 10, day: 'Sunday', time: '11:55pm' },\n        },\n        {\n            title: 'Assignment 5 (Cloth Simulator)',\n            due: { week: 11, day: 'Sunday', time: '11:55pm' },\n        },\n        {\n            title: \"Dean's Date: Final Project\",\n            due: { week: 13, day: 'Tuesday', time: '11:55pm' },\n        },\n    ],\n    other: [\n        {\n            title: 'In-class Exam (on content through Week 5)',\n            due: { week: 6, day: 'Thursday' },\n        },\n        {\n            title: 'In-class Project Proposals',\n            due: { week: 12, day: 'Thursday' },\n        },\n        {\n            title: 'Final Project Presentations I (Tentative Date)',\n            due: { week: 13, day: 'Friday' },\n        },\n        {\n            title: 'Final Project Presentations II (Tentative Date)',\n            due: { week: 13, day: 'Saturday' },\n        },\n    ],\n};\n\nexport default materials;\n","// Library imports\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n// Project imports\nimport { PageLayout, Content, MaterialsTable } from 'components';\nimport { materials } from 'content';\n// UI imports\nimport Typography from '@material-ui/core/Typography';\n\nfunction Materials() {\n    // Grab semester and first day of semester\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        courseSettings {\n                            semester\n                            firstDayOfSemester\n                            firstLecture\n                            secondLecture\n                        }\n                    }\n                }\n            }\n        `\n    );\n    const {\n        semester,\n        firstDayOfSemester,\n        firstLecture,\n        secondLecture,\n    } = site.siteMetadata.courseSettings;\n    const firstDay = new Date(`${semester}-${firstDayOfSemester}Z`);\n\n    // Function to compute date from week and day\n    const computeAndFormatDate = (weekNumber, dayOfWeek) => {\n        // String mapping\n        const dayToNumber = {\n            Monday: 0,\n            Tuesday: 1,\n            Wednesday: 2,\n            Thursday: 3,\n            Friday: 4,\n            Saturday: 5,\n            Sunday: 6,\n        };\n\n        // Format function\n        const dateFormatOptions = {\n            timeZone: 'UTC',\n            weekday: 'short',\n            month: 'short',\n            day: 'numeric',\n        };\n        const formatDate = (date) =>\n            date.toLocaleDateString(undefined, dateFormatOptions);\n\n        // Allocate fresh memory for the result\n        const result = new Date(firstDay);\n        // Corner case\n        if (!dayToNumber[dayOfWeek]) {\n            console.warn(`Error: ${dayOfWeek} is not a day of the week`);\n            return formatDate(result);\n        }\n\n        // Compute result\n        let adjustedWeekNumber = weekNumber;\n        if (adjustedWeekNumber > 5) {\n            // Add an extra week for spring break\n            adjustedWeekNumber += 1;\n        }\n        if (adjustedWeekNumber > 12) {\n            // Add an extra week for reading period\n            adjustedWeekNumber += 1;\n        }\n        result.setUTCDate(\n            result.getUTCDate() +\n                7 * adjustedWeekNumber +\n                dayToNumber[dayOfWeek]\n        );\n        return formatDate(result);\n    };\n\n    // Organize assignments and events by week\n    const weekToAssignments = {};\n    materials.assignments.forEach((assignment) => {\n        const { week } = assignment.due;\n        const weekIndex = week - 1;\n        if (!weekToAssignments[weekIndex]) {\n            weekToAssignments[weekIndex] = [];\n        }\n\n        weekToAssignments[weekIndex].push(assignment);\n    });\n    const weekToEvents = {};\n    materials.other.forEach((otherEvent) => {\n        const { week } = otherEvent.due;\n        const weekIndex = week - 1;\n        if (!weekToEvents[weekIndex]) {\n            weekToEvents[weekIndex] = [];\n        }\n\n        weekToEvents[weekIndex].push(otherEvent);\n    });\n\n    // Build semester schedule week by week\n    const masterSchedule = [];\n    for (let week = 0; week < 13; week++) {\n        // Initialize empty schedule for the week\n        const weekSchedule = {\n            Monday: [],\n            Tuesday: [],\n            Wednesday: [],\n            Thursday: [],\n            Friday: [],\n            Saturday: [],\n            Sunday: [],\n        };\n\n        // Lectures take first priority in ordering\n        if (week < 12) {\n            // Extract data\n            const firstLectureData = materials.lectures[2 * week];\n            const firstReadingsData = materials.readings[2 * week];\n            const secondLectureData = materials.lectures[2 * week + 1];\n            const secondReadingsData = materials.readings[2 * week + 1];\n\n            // Add data to schedule\n            if (firstLectureData) {\n                weekSchedule[firstLecture].push({\n                    lecture: firstLectureData,\n                    readings: firstReadingsData,\n                    date: computeAndFormatDate(week, firstLecture),\n                });\n            }\n            if (secondLectureData) {\n                weekSchedule[secondLecture].push({\n                    lecture: secondLectureData,\n                    readings: secondReadingsData,\n                    date: computeAndFormatDate(week, secondLecture),\n                });\n            }\n        }\n\n        // Assignments have second priority\n        if (weekToAssignments[week]) {\n            weekToAssignments[week].forEach((assignment) => {\n                const day = assignment.due.day;\n                const date = computeAndFormatDate(week, day);\n                weekSchedule[day].push({ assignment: assignment, date });\n            });\n        }\n\n        // Precepts have third priority\n        if (week < 12) {\n            const preceptData = materials.precepts[week];\n            if (preceptData) {\n                // Precept appears after last lecture for week\n                weekSchedule[secondLecture].push({\n                    precept: preceptData,\n                    date: `Precept`,\n                });\n            }\n        }\n        masterSchedule.push(weekSchedule);\n\n        // Events have last priority\n        if (weekToEvents[week]) {\n            weekToEvents[week].forEach((otherEvent) => {\n                const day = otherEvent.due.day;\n                const date = computeAndFormatDate(week, day);\n                weekSchedule[day].push({ otherEvent: otherEvent, date });\n            });\n        }\n    }\n\n    // Condense schedule into array of arrays of objects\n    const simplifiedSchedule = masterSchedule.map((week) => {\n        const simplifiedWeek = [\n            ...week.Monday,\n            ...week.Tuesday,\n            ...week.Wednesday,\n            ...week.Thursday,\n            ...week.Friday,\n            ...week.Saturday,\n            ...week.Sunday,\n        ];\n\n        return simplifiedWeek;\n    });\n\n    // Render\n    return (\n        <PageLayout title={'Materials'}>\n            <Content>\n                <Typography variant='h3' gutterBottom>\n                    {'Materials'}\n                </Typography>\n                <MaterialsTable schedule={simplifiedSchedule} />\n            </Content>\n        </PageLayout>\n    );\n}\n\nexport default Materials;\n"],"sourceRoot":""}