{"version":3,"sources":["webpack:///./src/templates/AssignmentTemplate.jsx"],"names":["assignmentStyles","makeStyles","theme","imageShadow","boxShadow","shadows","transition","codeStyle","fontSize","lineHeight","pageQuery","AssignmentTemplate","data","markdownRemark","htmlAst","frontmatter","headings","assignmentNumber","assignmentName","submitURL","dueWeek","dueDay","dueTime","requiredPoints","optionalPoints","dimReturnTop","dimReturnBottom","customComponents","children","props","variant","component","color","to","withPrefix","className","clsx","dangerouslySetInnerHTML","__html","dimFactor","dueString","semesterOffsetToDateString","title","subtitle","markdown","components"],"mappings":"uaAWA,IAAMA,EAAmBC,aAAW,SAACC,GAAD,MAAY,CAC5CC,YAAa,CACTC,UAAcF,EAAMG,QAAQ,GAAnB,cACTC,WACI,+DACJ,UAAW,CACPF,UAAcF,EAAMG,QAAQ,GAAnB,gBAGjBE,UAAW,CACPC,SAAU,GACVC,WAAY,YA0Eb,IAAMC,EAAS,YAwBPC,UA7Ff,YAAuC,IAAD,IAARC,KACsBC,eAAxCC,EAD0B,EAC1BA,QAASC,EADiB,EACjBA,YAAaC,EADI,EACJA,SACtBC,EAAyIF,EAAzIE,iBAAkBC,EAAuHH,EAAvHG,eAAgBC,EAAuGJ,EAAvGI,UAAWC,EAA4FL,EAA5FK,QAASC,EAAmFN,EAAnFM,OAAQC,EAA2EP,EAA3EO,QAASC,EAAkER,EAAlEQ,eAAgBC,EAAkDT,EAAlDS,eAAgBC,EAAkCV,EAAlCU,aAAcC,EAAoBX,EAApBW,gBAF3F,EAGC1B,IAA3BG,EAH0B,EAG1BA,YAAaI,EAHa,EAGbA,UAGfoB,EAAmB,CACrB,GAAM,gBAAGC,EAAH,EAAGA,SAAaC,EAAhB,yBACF,kBAAC,IAAD,eAAYC,QAAQ,YAAYC,UAAU,KAAKC,MAAM,iBAAoBH,GACpED,IAGT,kBAAmB,gBAAGA,EAAH,EAAGA,SAAH,OACf,kBAAC,IAAD,CACIK,GAAIC,qBAAW,mBAAmBjB,EAApB,SAEbW,IAGT,cAAe,gBAAGA,EAAH,EAAGA,SAAH,OACX,kBAAC,IAAD,CAAcK,GAAId,GAAYS,IAElC,IAAO,gBAAGO,EAAH,EAAGA,UAAcN,EAAjB,0BACH,uCAAKM,UAAWC,YAAKD,EAAWhC,IAAkB0B,KAEtD,MAAS,kBACL,0BAAMM,UAAW5B,GACXgB,EAAiBC,IAG3B,SAAY,kBACR,0BAAMW,UAAW5B,GACXgB,IAGV,SAAY,kBACR,0BAAMY,UAAW5B,GACXiB,IAGV,IAAO,kBACH,0BACIW,UAAW5B,EACX8B,wBACI,CAACC,OAAO,QAASb,EAAeC,EAAzB,QAInB,mBAAoB,kBAAO,kBAAC,IAAD,CAAiBH,eAAgBA,EAAgBC,eAAgBA,EAAgBe,UAAWd,EAAeC,MAKpIc,EAAS,QADFC,YAA2BrB,EAAU,EAAGC,GACtC,OAAsBC,EAGrC,OACI,kBAAC,IAAD,CAAYoB,MAAK,cAAgBzB,GAC7B,kBAAC,IAAD,CACIyB,MAAK,cAAgBzB,EAAhB,KAAqCC,EAC1CyB,SAAUH,EACVI,SAAU,CAAE9B,UAASE,YACrB6B,WAAYlB","file":"component---src-templates-assignment-template-jsx-d2a0d15b7361547b0ace.js","sourcesContent":["// Library imports\nimport React from 'react';\nimport { graphql, withPrefix } from 'gatsby';\nimport clsx from 'clsx';\n// Project imports\nimport { PageLayout, ExternalLink, MarkdownPage, ScoreCalculator } from 'components';\nimport { semesterOffsetToDateString } from 'utils';\n// UI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst assignmentStyles = makeStyles((theme) => ({\n    imageShadow: {\n        boxShadow: `${theme.shadows[4]} !important`,\n        transition:\n            'box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms !important',\n        '&:hover': {\n            boxShadow: `${theme.shadows[8]} !important`,\n        },\n    },\n    codeStyle: {\n        fontSize: 16,\n        lineHeight: '1rem',\n    },\n}));\n\n// A template that generating assignment specs from markdown content\nfunction AssignmentTemplate({ data }) {\n    const { htmlAst, frontmatter, headings } = data.markdownRemark;\n    const { assignmentNumber, assignmentName, submitURL, dueWeek, dueDay, dueTime, requiredPoints, optionalPoints, dimReturnTop, dimReturnBottom } = frontmatter;\n    const { imageShadow, codeStyle } = assignmentStyles();\n\n    // Custom components to generate from markdown html\n    const customComponents = {\n        'td': ({ children, ...props }) => (\n            <Typography variant='subtitle1' component='td' color=\"textSecondary\" {...props}>\n                {children}\n            </Typography>\n        ),\n        'assignment-link': ({ children }) => (\n            <ExternalLink\n                to={withPrefix(`zips/Assignment-${assignmentNumber}.zip`)}\n            >\n                {children}\n            </ExternalLink>\n        ),\n        'submit-link': ({ children }) => (\n            <ExternalLink to={submitURL}>{children}</ExternalLink>\n        ),\n        'img': ({ className, ...props }) => (\n            <img className={clsx(className, imageShadow)} {...props} />\n        ),\n        'total': () => (\n            <code className={codeStyle}>\n                { requiredPoints + optionalPoints }\n            </code>\n        ),\n        'required': () => (\n            <code className={codeStyle}>\n                { requiredPoints }\n            </code>\n        ),\n        'optional': () => (\n            <code className={codeStyle}>\n                { optionalPoints }\n            </code>\n        ),\n        'dim': () => (\n            <code\n                className={codeStyle}\n                dangerouslySetInnerHTML={\n                    {__html: `&frac${dimReturnTop}${dimReturnBottom};`}\n                }\n            />\n        ),\n        'score-calculator': () => (<ScoreCalculator requiredPoints={requiredPoints} optionalPoints={optionalPoints} dimFactor={dimReturnTop / dimReturnBottom} />)\n    };\n\n    // Compute due date string for the assignment\n    const date = semesterOffsetToDateString(dueWeek - 1, dueDay);\n    const dueString = `Due: ${date} at ${dueTime}`;\n\n    // Render\n    return (\n        <PageLayout title={`Assignment ${assignmentNumber}`}>\n            <MarkdownPage\n                title={`Assignment ${assignmentNumber}: ${assignmentName}`}\n                subtitle={dueString}\n                markdown={{ htmlAst, headings }}\n                components={customComponents}\n            />\n        </PageLayout>\n    );\n}\n\n// Query markdown content\nexport const pageQuery = graphql`\n    query($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            htmlAst\n            frontmatter {\n                assignmentName\n                assignmentNumber\n                dueWeek\n                dueDay\n                dueTime\n                submitURL\n                requiredPoints\n                optionalPoints\n                dimReturnTop\n                dimReturnBottom\n            }\n            headings {\n                value\n                depth\n            }\n        }\n    }\n`;\n\nexport default AssignmentTemplate;\n"],"sourceRoot":""}