{"version":3,"sources":["webpack:///./src/pages/assignments.jsx"],"names":["assignmentStyles","makeStyles","theme","imageShadow","boxShadow","shadows","transition","flexWrapper","display","grow","flexGrow","pageQuery","Assignments","data","piazzaURL","site","siteMetadata","courseSettings","assignments","edges","node","htmlAst","frontmatter","headings","assignmentNumber","assignmentName","submitURL","renderAst","rehypeReact","createElement","components","children","variant","id","urlify","paragraph","component","href","target","rel","withPrefix","className","props","clsx","Compiler","title","gutterBottom"],"mappings":"oTAYA,IAAMA,EAAmBC,aAAW,SAACC,GAAD,MAAY,CAC5CC,YAAa,CACTC,UAAcF,EAAMG,QAAQ,GAAnB,cACTC,WAAY,+DACZ,UAAW,CACPF,UAAcF,EAAMG,QAAQ,GAAnB,gBAGjBE,YAAa,CACTC,QAAS,QAEbC,KAAM,CACFC,SAAU,OAwGX,IAAMC,EAAS,YAgCPC,UAnIf,YAAgC,IAATC,EAAQ,EAARA,KACbC,EAAYD,EAAKE,KAAKC,aAAaC,eAAeH,UAD7B,EAEgBD,EAAKK,YAAYC,MAAM,GAAGC,KAA7DC,EAFmB,EAEnBA,QAASC,EAFU,EAEVA,YAAaC,EAFH,EAEGA,SACtBC,EAAgDF,EAAhDE,iBAAkBC,EAA8BH,EAA9BG,eAAgBC,EAAcJ,EAAdI,UAHf,EAIgB1B,IAAnCG,EAJmB,EAInBA,YAAaI,EAJM,EAINA,YAAaE,EAJP,EAIOA,KAC5BkB,EAAY,IAAIC,IAAY,CAC9BC,cAAeA,gBACfC,WAAY,CACR,GAAO,gBAAGC,EAAH,EAAGA,SAAH,OACH,kBAAC,IAAD,CAAYC,QAAQ,MAChB,kBAAC,IAAD,CAAYC,GAAIC,YAAOH,EAAS,KAC3BA,KAIb,GAAO,gBAAGA,EAAH,EAAGA,SAAH,OACH,kBAAC,IAAD,CAAYC,QAAQ,MAChB,kBAAC,IAAD,CAAYC,GAAIC,YAAOH,EAAS,KAC3BA,KAIb,EAAM,gBAAGA,EAAH,EAAGA,SAAH,OACF,kBAAC,IAAD,CAAYC,QAAQ,QAAQG,WAAW,GAClCJ,IAGT,GAAO,gBAAGA,EAAH,EAAGA,SAAH,OACH,kBAAC,IAAD,CAAYC,QAAQ,QAAQI,UAAU,KAAKD,WAAW,GACjDJ,IAGT,EAAM,gBAAGM,EAAH,EAAGA,KAAMN,EAAT,EAASA,SAAT,OACF,uBACIO,OAAO,SACPC,IAAI,sBACJF,KAAMA,GAELN,IAGT,kBAAoB,gBAAGA,EAAH,EAAGA,SAAH,OAChB,uBACIO,OAAO,SACPC,IAAI,sBACJF,KAAMG,qBAAW,0BACahB,EADd,SAIfO,IAGT,cAAgB,gBAAGA,EAAH,EAAGA,SAAH,OACZ,uBACIO,OAAO,SACPC,IAAI,sBACJF,KAAMX,GAELK,IAGT,YAAc,gBAAGM,EAAH,EAAGA,KAAMN,EAAT,EAASA,SAAT,OACV,uBAAGM,KAAMG,qBAAWH,IACfN,IAGT,cAAgB,kBACZ,uBACIO,OAAO,SACPC,IAAI,sBACJF,KAAMvB,GAEL,WAGT,IAAQ,gBAAE2B,EAAF,EAAEA,UAAcC,E,oIAAhB,yBACJ,uCAAKD,UAAWE,YAAKF,EAAWtC,IAAkBuC,QAG3DE,SAGH,OACI,kBAAC,IAAD,CAAYC,MAAO,eACX,yBAAKJ,UAAWlC,GACZ,yBAAKkC,UAAWhC,GACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYuB,QAAQ,KAAKc,cAAY,GAArC,cACmBtB,EADnB,KACwCC,GAEtCE,EAAUN,KAGpB,kBAAC,IAAD,CAAiBE,SAAUA","file":"component---src-pages-assignments-jsx-4635205ae6f0228e8365.js","sourcesContent":["// Library imports\nimport React, { createElement } from 'react';\nimport rehypeReact from \"rehype-react\";\nimport { graphql, withPrefix } from \"gatsby\";\nimport clsx from \"clsx\";\n// Project imports\nimport { AnchorLink, PageLayout, Content, TableOfContents } from 'components';\nimport { urlify } from 'utils';\n// UI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst assignmentStyles = makeStyles((theme) => ({\n    imageShadow: {\n        boxShadow: `${theme.shadows[4]} !important`,\n        transition: 'box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms !important',\n        '&:hover': {\n            boxShadow: `${theme.shadows[8]} !important`,\n        }\n    },\n    flexWrapper: {\n        display: 'flex'\n    },\n    grow: {\n        flexGrow: 1\n    },\n}));\n\n\nfunction Assignments({ data }) {\n    const piazzaURL = data.site.siteMetadata.courseSettings.piazzaURL;\n    const { htmlAst, frontmatter, headings } = data.assignments.edges[0].node;\n    const { assignmentNumber, assignmentName, submitURL } = frontmatter;\n    const { imageShadow, flexWrapper, grow } = assignmentStyles();\n    const renderAst = new rehypeReact({\n        createElement: createElement,\n        components: {\n            \"h1\": (({ children }) => (\n                <Typography variant='h4'>\n                    <AnchorLink id={urlify(children[0])}>\n                        {children}\n                    </AnchorLink>\n                </Typography>\n            )),\n            \"h2\": (({ children }) => (\n                <Typography variant='h6'>\n                    <AnchorLink id={urlify(children[0])}>\n                        {children}\n                    </AnchorLink>\n                </Typography>\n            )),\n            \"p\": (({ children }) => (\n                <Typography variant='body1' paragraph={true}>\n                    {children}\n                </Typography>\n            )),\n            \"ul\": (({ children }) => (\n                <Typography variant='body1' component=\"ul\" paragraph={true}>\n                    {children}\n                </Typography>\n            )),\n            \"a\": (({ href, children }) => (\n                <a\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    href={href}\n                >\n                    {children}\n                </a>\n            )),\n            \"assignment-link\": (({ children }) => (\n                <a\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    href={withPrefix(\n                        `assignments/Assignment-${assignmentNumber}.zip`\n                    )}\n                >\n                    {children}\n                </a>\n            )),\n            \"submit-link\": (({ children }) => (\n                <a\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    href={submitURL}\n                >\n                    {children}\n                </a>\n            )),\n            \"hash-link\": (({ href, children }) => (\n                <a href={withPrefix(href)}>\n                    {children}\n                </a>\n            )),\n            \"piazza-link\": (() => (\n                <a\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    href={piazzaURL}\n                >\n                    {\"Piazza\"}\n                </a>\n            )),\n            \"img\": (({className, ...props}) => (\n                <img className={clsx(className, imageShadow)} {...props} />\n            )),\n        },\n    }).Compiler;\n\n    // Render\n    return (\n        <PageLayout title={'Assignments'}>\n                <div className={flexWrapper}>\n                    <div className={grow}>\n                        <Content>\n                            <Typography variant='h3' gutterBottom>\n                                {`Assignment ${assignmentNumber}: ${assignmentName}`}\n                            </Typography>\n                            { renderAst(htmlAst) }\n                        </Content>\n                    </div>\n                    <TableOfContents headings={headings} />\n                </div>\n        </PageLayout>\n    );\n}\n\nexport const pageQuery = graphql`\n    query {\n        assignments: allMarkdownRemark(\n            filter: {\n                fileAbsolutePath: {regex: \"/\\\\/src\\\\/content\\\\/Assignments\\\\/.*\\\\.md$/\"}\n            }\n        ) {\n            edges {\n                node {\n                    htmlAst\n                    frontmatter {\n                        assignmentName\n                        assignmentNumber\n                        submitURL\n                    }\n                    headings {\n                      value\n                      depth\n                    }\n                }\n            }\n        }\n        site {\n            siteMetadata {\n                courseSettings {\n                    piazzaURL\n                }\n            }\n        }\n    }\n`;\n\nexport default Assignments;\n"],"sourceRoot":""}