{"version":3,"sources":["webpack:///./src/templates/AssignmentTemplate.jsx"],"names":["assignmentStyles","makeStyles","codeStyle","fontSize","lineHeight","textOverflow","overflowWrap","pageQuery","AssignmentTemplate","shortTitle","fullTitle","data","markdownRemark","htmlAst","frontmatter","headings","assignmentNumber","assignmentName","submitURL","dueWeek","dueDay","dueTime","requiredPoints","optionalPoints","dimReturnTop","dimReturnBottom","customComponents","td","children","props","variant","component","color","className","to","withPrefix","replace","img","total","required","optional","dim","dangerouslySetInnerHTML","__html","dimFactor","dueString","semesterOffsetToDateString","title","subtitle","markdown","components"],"mappings":"gSAgBA,IAAMA,EAAmBC,aAAW,iBAAO,CACvCC,UAAW,CACPC,SAAU,GACVC,WAAY,QAEhBC,aAAc,CACVC,aAAc,kBAoGf,IAAMC,EAAS,YAwBPC,UAvHf,YAAuC,IAwE/BC,EAAYC,EAxEkB,IAARC,KACsBC,eAAxCC,EAD0B,EAC1BA,QAASC,EADiB,EACjBA,YAAaC,EADI,EACJA,SAE1BC,EAUAF,EAVAE,iBACAC,EASAH,EATAG,eACAC,EAQAJ,EARAI,UACAC,EAOAL,EAPAK,QACAC,EAMAN,EANAM,OACAC,EAKAP,EALAO,QACAC,EAIAR,EAJAQ,eACAC,EAGAT,EAHAS,eACAC,EAEAV,EAFAU,aACAC,EACAX,EADAW,gBAZ8B,EAcEzB,IAA5BE,EAd0B,EAc1BA,UAAWG,EAde,EAcfA,aAGbqB,EAAmB,CACrBC,GAAI,gBAAGC,EAAH,EAAGA,SAAaC,E,oIAAhB,wBACA,kBAAC,IAAD,eACIC,QAAQ,YACRC,UAAU,KACVC,MAAM,gBACNC,UAAW5B,GACPwB,GAEHD,IAGT,kBAAmB,gBAAGA,EAAH,EAAGA,SAAH,OACf,kBAAC,IAAD,CACIM,GAAKlB,EAAmB,EACpBmB,qBAAW,gBAAgBlB,EAAemB,QAAQ,OAAQ,KAAhD,QACRD,qBAAW,2BAA2BnB,EAA5B,SAGfY,IAGT,cAAe,gBAAGA,EAAH,EAAGA,SAAH,OACX,kBAAC,IAAD,CAAcM,GAAIhB,GAAYU,IAElCS,IAAK,SAACR,GAAD,OACD,kBAAC,IAAeA,IAEpBS,MAAO,kBACH,0BAAML,UAAW/B,GAAYoB,EAAiBC,IAElDgB,SAAU,kBAAM,0BAAMN,UAAW/B,GAAYoB,IAC7CkB,SAAU,kBAAM,0BAAMP,UAAW/B,GAAYqB,IAC7CkB,IAAK,kBACD,0BACIR,UAAW/B,EACXwC,wBAAyB,CACrBC,OAAO,QAASnB,EAAeC,EAAzB,QAIlB,mBAAoB,kBAChB,kBAAC,IAAD,CACIH,eAAgBA,EAChBC,eAAgBA,EAChBqB,UAAWpB,EAAeC,MAOhCoB,EAAS,QADFC,YAA2B3B,EAAU,EAAGC,GACtC,OAAsBC,EAarC,OATIL,GAAoB,GACpBP,EAAU,cAAiBO,EAC3BN,EAAS,cAAiBM,EAAjB,KAAsCC,IAE/CR,EAAaQ,EACbP,EAAYO,GAKZ,kBAAC,IAAD,CAAY8B,MAAOtC,GACf,kBAAC,IAAD,CACIsC,MAAOrC,EACPsC,SAAUH,EACVI,SAAU,CAAEpC,UAASE,YACrBmC,WAAYxB","file":"component---src-templates-assignment-template-jsx-114bd41027eb1e4a8977.js","sourcesContent":["// Library imports\nimport React from 'react';\nimport { graphql, withPrefix } from 'gatsby';\n// Project imports\nimport {\n    PageLayout,\n    ExternalLink,\n    HoverImage,\n    MarkdownPage,\n    ScoreCalculator,\n} from 'components';\nimport { semesterOffsetToDateString } from 'utils';\n// UI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst assignmentStyles = makeStyles(() => ({\n    codeStyle: {\n        fontSize: 16,\n        lineHeight: '1rem',\n    },\n    textOverflow: {\n        overflowWrap: 'break-word',\n    },\n}));\n\n// A template that generating assignment specs from markdown content\nfunction AssignmentTemplate({ data }) {\n    const { htmlAst, frontmatter, headings } = data.markdownRemark;\n    const {\n        assignmentNumber,\n        assignmentName,\n        submitURL,\n        dueWeek,\n        dueDay,\n        dueTime,\n        requiredPoints,\n        optionalPoints,\n        dimReturnTop,\n        dimReturnBottom,\n    } = frontmatter;\n    const { codeStyle, textOverflow } = assignmentStyles();\n\n    // Custom components to generate from markdown html\n    const customComponents = {\n        td: ({ children, ...props }) => (\n            <Typography\n                variant='subtitle1'\n                component='td'\n                color='textSecondary'\n                className={textOverflow}\n                {...props}\n            >\n                {children}\n            </Typography>\n        ),\n        'assignment-link': ({ children }) => (\n            <ExternalLink\n                to={(assignmentNumber < 0) ?\n                    withPrefix(`zips/COS-426-${assignmentName.replace(/\\s+/g, '-')}.zip`)\n                    : withPrefix(`zips/COS-426-Assignment-${assignmentNumber}.zip`)\n                }\n            >\n                {children}\n            </ExternalLink>\n        ),\n        'submit-link': ({ children }) => (\n            <ExternalLink to={submitURL}>{children}</ExternalLink>\n        ),\n        img: (props) => (\n            <HoverImage {...props} />\n        ),\n        total: () => (\n            <code className={codeStyle}>{requiredPoints + optionalPoints}</code>\n        ),\n        required: () => <code className={codeStyle}>{requiredPoints}</code>,\n        optional: () => <code className={codeStyle}>{optionalPoints}</code>,\n        dim: () => (\n            <code\n                className={codeStyle}\n                dangerouslySetInnerHTML={{\n                    __html: `&frac${dimReturnTop}${dimReturnBottom};`,\n                }}\n            />\n        ),\n        'score-calculator': () => (\n            <ScoreCalculator\n                requiredPoints={requiredPoints}\n                optionalPoints={optionalPoints}\n                dimFactor={dimReturnTop / dimReturnBottom}\n            />\n        ),\n    };\n\n    // Compute due date string for the assignment\n    const date = semesterOffsetToDateString(dueWeek - 1, dueDay);\n    const dueString = `Due: ${date} at ${dueTime}`;\n\n    // Compute strings for titles\n    let shortTitle, fullTitle;\n    if (assignmentNumber >= 0) {\n        shortTitle = `Assignment ${assignmentNumber}`;\n        fullTitle = `Assignment ${assignmentNumber}: ${assignmentName}`;\n    } else {\n        shortTitle = assignmentName;\n        fullTitle = assignmentName;\n    }\n\n    // Render\n    return (\n        <PageLayout title={shortTitle}>\n            <MarkdownPage\n                title={fullTitle}\n                subtitle={dueString}\n                markdown={{ htmlAst, headings }}\n                components={customComponents}\n            />\n        </PageLayout>\n    );\n}\n\n// Query markdown content\nexport const pageQuery = graphql`\n    query($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            htmlAst\n            frontmatter {\n                assignmentName\n                assignmentNumber\n                dueWeek\n                dueDay\n                dueTime\n                submitURL\n                requiredPoints\n                optionalPoints\n                dimReturnTop\n                dimReturnBottom\n            }\n            headings {\n                value\n                depth\n            }\n        }\n    }\n`;\n\nexport default AssignmentTemplate;\n"],"sourceRoot":""}