{"version":3,"sources":["webpack:///./src/pages/gallery.jsx"],"names":["galleryStyles","makeStyles","textOverflow","overflowWrap","pageQuery","Gallery","data","prizes","customComponents","td","children","props","variant","component","color","className","img","h3","gutterBottom","id","urlify","student","gallery","place","title","markdown","markdownRemark","components"],"mappings":"yQAUA,IAAMA,EAAgBC,aAAW,iBAAO,CACpCC,aAAc,CACVC,aAAc,kBA0Df,IAAMC,EAAS,aAcPC,UAnEf,YAA4B,IAATC,EAAQ,EAARA,KAEPJ,EAAiBF,IAAjBE,aAGFK,EAAS,CAAC,KAAM,KAAM,KAAM,KAAM,IAAK,KAGvCC,EAAmB,CACrBC,GAAI,gBAAGC,EAAH,EAAGA,SAAaC,E,oIAAhB,wBACA,kBAAC,IAAD,eACIC,QAAQ,YACRC,UAAU,KACVC,MAAM,gBACNC,UAAWb,GACPS,GAEHD,IAGTM,IAAK,SAACL,GAAD,OACD,kBAAC,IAAeA,IAEpBM,GAAI,gBAAGP,EAAH,EAAGA,SAAH,OACA,kBAAC,IAAD,CAAYE,QAAQ,KAAKM,cAAY,GACjC,kBAAC,IAAD,CAAYC,GAAIC,YAAOV,EAAS,KAAMA,KAG9CW,QAAS,gBAAGX,EAAH,EAAGA,SAAUY,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,MAAtB,OACL,kBAAC,IAAD,CAAYX,QAAQ,MAChB,kBAAC,IAAD,CAAYO,GAAOC,YAAOV,EAAS,IAArB,YAAoCY,GAC7CC,GAASA,GAAS,GAAKA,GAAS,GAC7B,8BAAUhB,EAAOgB,EAAQ,GAAzB,KAEHb,MAOjB,OACI,kBAAC,IAAD,CAAYc,MAAO,WACf,kBAAC,IAAD,CACIA,MAAO,cACPC,SAAUnB,EAAKoB,eACfC,WAAYnB","file":"component---src-pages-gallery-jsx-faa06765d8fbfa9fde27.js","sourcesContent":["// Library imports\nimport React from 'react';\nimport { graphql } from 'gatsby';\n// Project imports\nimport { AnchorLink, PageLayout, HoverImage, MarkdownPage } from 'components';\nimport { urlify } from 'utils';\n// UI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst galleryStyles = makeStyles(() => ({\n    textOverflow: {\n        overflowWrap: 'break-word',\n    },\n}));\n\n// Generate gallery from markdown content\nfunction Gallery({ data }) {\n    // Custom class\n    const { textOverflow } = galleryStyles();\n\n    // Emoji prizes\n    const prizes = [\"🥇\", \"🥈\", \"🥉\", \"🌟\", \"⭐\", \"✨\"];\n\n    // Custom components to generate from markdown html\n    const customComponents = {\n        td: ({ children, ...props }) => (\n            <Typography\n                variant='subtitle1'\n                component='td'\n                color='textSecondary'\n                className={textOverflow}\n                {...props}\n            >\n                {children}\n            </Typography>\n        ),\n        img: (props) => (\n            <HoverImage {...props} />\n        ),\n        h3: ({ children }) => (\n            <Typography variant='h5' gutterBottom>\n                <AnchorLink id={urlify(children[0])}>{children}</AnchorLink>\n            </Typography>\n        ),\n        student: ({ children, gallery, place }) => (\n            <Typography variant='h6'>\n                <AnchorLink id={`${urlify(children[0])}-gallery-${gallery}`}>\n                    {place && place >= 1 && place <= 6 && (\n                        <span>{`${prizes[place - 1]} `}</span>\n                    )}\n                    {children}\n                </AnchorLink>\n            </Typography>\n        )\n    };\n\n    // Render\n    return (\n        <PageLayout title={'Gallery'}>\n            <MarkdownPage\n                title={'Art Gallery'}\n                markdown={data.markdownRemark}\n                components={customComponents}\n            />\n        </PageLayout>\n    );\n}\n\n// Query markdown content\nexport const pageQuery = graphql`\n    query {\n        markdownRemark(\n            fileAbsolutePath: {regex: \"/Gallery\\\\/Gallery\\\\.md$/\"}\n        ) {\n            htmlAst\n            headings {\n              value\n              depth\n            }\n        }\n    }\n`;\n\nexport default Gallery;\n"],"sourceRoot":""}